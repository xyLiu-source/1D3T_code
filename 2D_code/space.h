#include <iostream>
#include <cmath>

// space function
//Source
void compute_Talpha(double** u, double xi, double eta, double C_valpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void compute_Tr4(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void F_Si(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5);
void F_Sr(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void Source_i(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double h_x, double h_y);
void Source_r(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double h_x, double h_y);
void Source_e(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double** Si_0, double** Si_1, double** Si_2, double** Si_3, double** Si_4, double** Si_5, double** Sr_0, double** Sr_1, double** Sr_2, double** Sr_3, double** Sr_4, double** Sr_5);
//Convection
void F_d(double** u, double xi, double eta, double** u_0, double** u_1, double** u_2, double** u_3, double** u_4, double** u_5);
void F1_m1_fun(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void F_m(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5);
void F2_m2_fun(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void F1_alpha(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5, double gamma_alpha);
void F2_alpha(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5, double gamma_alpha);
void compute_jump_x(double** u, double** F_plus_x, double** F_minus_x);
void compute_ave_x(double** u, double** F_plus_x, double** F_minus_x);
void compute_jump_y(double** u, double** F_plus_y, double** F_minus_y);
void compute_ave_y(double** u, double** F_plus_y, double** F_minus_y);
void C_s(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void compute_upxi(double** u, double xi, double eta, double** u_1, double** u_3, double** u_4);
void compute_upeta(double** u, double xi, double eta, double** u_2, double** u_3, double** u_5);
void compute_F1_alphaC(double** alpha_c, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void compute_F2_alphaC(double** alpha_c, double xi, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void F1_d_hat(double** u, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** alpha_c);
void F1_m1_hat(double** u, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double** alpha_c);
void F1_m2_hat(double** u, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** alpha_c);
void F1_alpha_hat(double** u, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5, double** alpha_c, double gamma_alpha);
void F2_d_hat(double** u, double xi, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** alpha_c);
void F2_m1_hat(double** u, double xi, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** alpha_c);
void F2_m2_hat(double** u, double xi, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double** alpha_c);
void F2_alpha_hat(double** u, double xi, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5, double** alpha_c, double gamma_alpha);
void getGaussquadrature1D_1(double** u, double** F_1, double** F_2, double** F_3, double** F_4, double** F_5);
void getGaussquadrature1D_p(double** u, double** F_1, double** F_2, double** F_3, double** F_4, double** F_5);
void getGaussquadrature1D_p2(double** u, double** F_1, double** F_2, double** F_3, double** F_4, double** F_5);
void get_Gauss_quadrature_prime_2D_F1(double** U_0, double** U_1, double** U_2, double** u_11, double** u_21, double** u_31, double** u_41, double** u_51, double** u_12, double** u_22, double** u_32, double** u_42, double** u_52, double** u_13, double** u_23, double** u_33, double** u_43, double** u_53, double** u_14, double** u_24, double** u_34, double** u_44, double** u_54, double** u_15, double** u_25, double** u_35, double** u_45, double** u_55);
void get_Gauss_quadrature_prime_2D_F2(double** U_0, double** U_1, double** U_2, double** u_11, double** u_21, double** u_31, double** u_41, double** u_51, double** u_12, double** u_22, double** u_32, double** u_42, double** u_52, double** u_13, double** u_23, double** u_33, double** u_43, double** u_53, double** u_14, double** u_24, double** u_34, double** u_44, double** u_54, double** u_15, double** u_25, double** u_35, double** u_45, double** u_55);
void convection_d(double** con_0, double** con_1, double** con_2, double** con_3, double** con_4, double** con_5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** F1_alphac, double** F2_alphac, double h_x, double h_y);
void convection_m1(double** con_0, double** con_1, double** con_2, double** con_3, double** con_4, double** con_5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double** F1_alphac, double** F2_alphac, double h_x, double h_y);
void convection_m2(double** con_0, double** con_1, double** con_2, double** con_3, double** con_4, double** con_5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double** F1_alphac, double** F2_alphac, double h_x, double h_y);
void convection_Ealpha(double** con_0, double** con_1, double** con_2, double** con_3, double** con_4, double** con_5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5, double gamma_alpha, double** F1_alphac, double** F2_alphac, double h_x, double h_y);
void compute_F1_alphaC_max(double** alpha_c, double** alphac1, double** alphac2, double** alphac3, double** alphac4, double** alphac5);
void compute_F2_alphaC_max(double** alpha_c, double** alphac1, double** alphac2, double** alphac3, double** alphac4, double** alphac5);
double compute_alphaCx_max(double** alphaC_x); double compute_alphaCx_min(double** alphaC_x);
double compute_alphaCy_max(double** alphaC_y); double compute_alphaCy_min(double** alphaC_y);
// Nonconservetive
void p_alpha(double** u, double xi, double eta, double gamma_alpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void p_alphaxi(double** u, double xi, double eta, double gamma_alpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void p_alphaeta(double** u, double xi, double eta, double gamma_alpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void F_Ne(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double h_x, double h_y);
void F_Ni(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double h_x, double h_y);
void F_Nr(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double h_x, double h_y);
void getGaussquadrature(double* U_0, double* U_1, double* U_2, double* u_x1, double* u_x2, double* u_x3, double* u_x4, double* u_x5, int N_index, double h);
void getL2projection(double* U_0, double* U_1, double* U_2, double* u_0, double* u_1, double* u_2, int N_index, double h);
void compute_uhalf(double** u, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m_0, double** m_1, double** m_2, double** m_3, double** m_4, double** m_5, double h_x, int index_mode);
void compute_vhalf(double** u, double xi, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m_0, double** m_1, double** m_2, double** m_3, double** m_4, double** m_5, double h_y, int index_mode);
void compute_coefx(double** coef_L1, double** coef_R1, double** coef_L2, double** coef_R2, double** coef_L3, double** coef_R3, double** coef_L4, double** coef_R4, double** coef_L5, double** coef_R5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double h_x);
void compute_coefy(double** coef_B1, double** coef_T1, double** coef_B2, double** coef_T2, double** coef_B3, double** coef_T3, double** coef_B4, double** coef_T4, double** coef_B5, double** coef_T5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double h_y);
void palpha_jumpx(double** u, double eta, double gamma_alpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void palpha_jumpy(double** u, double xi, double gamma_alpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void Nonconservetive_Ne(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double** coef_L1, double** coef_R1, double** coef_L2, double** coef_R2, double** coef_L3, double** coef_R3, double** coef_L4, double** coef_R4, double** coef_L5, double** coef_R5, double** coef_B1, double** coef_T1, double** coef_B2, double** coef_T2, double** coef_B3, double** coef_T3, double** coef_B4, double** coef_T4, double** coef_B5, double** coef_T5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double h_x, double h_y);
void Nonconservetive_Ni(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double** coef_L1, double** coef_R1, double** coef_L2, double** coef_R2, double** coef_L3, double** coef_R3, double** coef_L4, double** coef_R4, double** coef_L5, double** coef_R5, double** coef_B1, double** coef_T1, double** coef_B2, double** coef_T2, double** coef_B3, double** coef_T3, double** coef_B4, double** coef_T4, double** coef_B5, double** coef_T5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double h_x, double h_y);
void Nonconservetive_Nr(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double** coef_L1, double** coef_R1, double** coef_L2, double** coef_R2, double** coef_L3, double** coef_R3, double** coef_L4, double** coef_R4, double** coef_L5, double** coef_R5, double** coef_B1, double** coef_T1, double** coef_B2, double** coef_T2, double** coef_B3, double** coef_T3, double** coef_B4, double** coef_T4, double** coef_B5, double** coef_T5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double h_x, double h_y);
// Diffusion
void compute_Talphaxi(double** u, double xi, double eta, double C_valpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void compute_Talphaeta(double** u, double xi, double eta, double C_valpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void compute_Tr4xi(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void compute_Tr4eta(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void compute_Talphaxi2(double** u, double xi, double eta, double C_valpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void compute_Talphaeta2(double** u, double xi, double eta, double C_valpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void compute_Tr4xi2(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void compute_Tr4eta2(double** u, double xi, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void Talpha_jumpx(double** u, double eta, double C_valpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void Talpha_jumpy(double** u, double xi, double C_valpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void Tr4_jumpx(double** u, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void Tr4_jumpy(double** u, double xi, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void Talphaxi_ave(double** u, double eta, double C_valpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void Talphaeta_ave(double** u, double xi, double C_valpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void Tr4xi_ave(double** u, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void Tr4eta_ave(double** u, double xi, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void Talphaxi2_jump(double** u, double eta, double C_valpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void Talphaeta2_jump(double** u, double xi, double C_valpha, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5);
void Tr4xi2_jump(double** u, double eta, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void Tr4eta2_jump(double** u, double xi, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5);
void Diffusion_alpha(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double C_valpha, double kappa_alpha, double alpha_d, double beta_d, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5, double h_x, double h_y);
void Diffusion_r(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double kappa_alpha, double alpha_d, double beta_d, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ealpha_0, double** Ealpha_1, double** Ealpha_2, double** Ealpha_3, double** Ealpha_4, double** Ealpha_5, double h_x, double h_y);


void space_d(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double* X_1, double* X_2, double* X_3, double* X_4, double* X_5, double* Y_1, double* Y_2, double* Y_3, double* Y_4, double* Y_5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** F1_alphac, double** F2_alphac, double h_x, double h_y, double t);
void space_m1(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double* X_1, double* X_2, double* X_3, double* X_4, double* X_5, double* Y_1, double* Y_2, double* Y_3, double* Y_4, double* Y_5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double** F1_alphac, double** F2_alphac, double h_x, double h_y, double t);
void space_m2(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double* X_1, double* X_2, double* X_3, double* X_4, double* X_5, double* Y_1, double* Y_2, double* Y_3, double* Y_4, double* Y_5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double** F1_alphac, double** F2_alphac, double h_x, double h_y, double t);
void space_e(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double* X_1, double* X_2, double* X_3, double* X_4, double* X_5, double* Y_1, double* Y_2, double* Y_3, double* Y_4, double* Y_5, double** coef_L1, double** coef_R1, double** coef_L2, double** coef_R2, double** coef_L3, double** coef_R3, double** coef_L4, double** coef_R4, double** coef_L5, double** coef_R5, double** coef_B1, double** coef_T1, double** coef_B2, double** coef_T2, double** coef_B3, double** coef_T3, double** coef_B4, double** coef_T4, double** coef_B5, double** coef_T5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double** F1_alphac, double** F2_alphac, double h_x, double h_y, double t, int index_mode);
void space_i(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double* X_1, double* X_2, double* X_3, double* X_4, double* X_5, double* Y_1, double* Y_2, double* Y_3, double* Y_4, double* Y_5, double** coef_L1, double** coef_R1, double** coef_L2, double** coef_R2, double** coef_L3, double** coef_R3, double** coef_L4, double** coef_R4, double** coef_L5, double** coef_R5, double** coef_B1, double** coef_T1, double** coef_B2, double** coef_T2, double** coef_B3, double** coef_T3, double** coef_B4, double** coef_T4, double** coef_B5, double** coef_T5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double** F1_alphac, double** F2_alphac, double h_x, double h_y, double t, int index_mode);
void space_r(double** U_0, double** U_1, double** U_2, double** U_3, double** U_4, double** U_5, double* X_1, double* X_2, double* X_3, double* X_4, double* X_5, double* Y_1, double* Y_2, double* Y_3, double* Y_4, double* Y_5, double** coef_L1, double** coef_R1, double** coef_L2, double** coef_R2, double** coef_L3, double** coef_R3, double** coef_L4, double** coef_R4, double** coef_L5, double** coef_R5, double** coef_B1, double** coef_T1, double** coef_B2, double** coef_T2, double** coef_B3, double** coef_T3, double** coef_B4, double** coef_T4, double** coef_B5, double** coef_T5, double** rho_0, double** rho_1, double** rho_2, double** rho_3, double** rho_4, double** rho_5, double** m1_0, double** m1_1, double** m1_2, double** m1_3, double** m1_4, double** m1_5, double** m2_0, double** m2_1, double** m2_2, double** m2_3, double** m2_4, double** m2_5, double** Ee_0, double** Ee_1, double** Ee_2, double** Ee_3, double** Ee_4, double** Ee_5, double** Ei_0, double** Ei_1, double** Ei_2, double** Ei_3, double** Ei_4, double** Ei_5, double** Er_0, double** Er_1, double** Er_2, double** Er_3, double** Er_4, double** Er_5, double** F1_alphac, double** F2_alphac, double h_x, double h_y, double t, int index_mode);
